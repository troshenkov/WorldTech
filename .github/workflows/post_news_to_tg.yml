# -----------------------------------------------------------------------------
# Workflow: Post News to Telegram
#
# This GitHub Actions workflow automates posting news from Markdown (.md) files
# in the topics/ directory to a Telegram channel using the Telegram Bot API.
#
# Triggers:
#   - Manual trigger via workflow_dispatch (from the GitHub UI)
#   - On push: when any Markdown file in topics/ is added, changed, or deleted
#   - (Optional) On tag: uncomment the tag section to trigger on tag push
#
# Requirements:
#   - The repository must contain a Bash script at scripts/post_news_to_tg.sh
#   - Telegram bot token and chat ID must be stored as repository secrets:
#       TELEGRAM_BOT_TOKEN, TELEGRAM_CHAT_ID
#
# Environment Variables Passed to Script:
#   TG_BOT_TOKEN      : Telegram bot token (from secrets)
#   TG_CHAT_ID        : Telegram chat/channel ID (from secrets)
#   GITHUB_EVENT_NAME : The event that triggered the workflow (for script logic)
#   ENVIRONMENT       : Set to "production" for production runs
#
# Author: Dmitry Troshenkov <troshenkov.d@gmail.com>
# -----------------------------------------------------------------------------

name: Post News to Telegram

on:
  workflow_dispatch:        # Allow manual trigger from GitHub UI
  push:
    paths:
      - 'topics/*.md'       # Trigger only when Markdown files in topics/ change
  # Uncomment to trigger on tags
  # push:
  #   tags:
  #     - 'news-*'

jobs:
  post_news:
    runs-on: ubuntu-latest
    environment: production

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Show environment and workflow context
        run: |
          echo "Bash version: $BASH_VERSION"
          echo "Running on: $(uname -a)"
          echo "Workflow triggered by: ${{ github.event_name }}"
          echo "Current branch: ${{ github.ref }}"
          echo "TG_BOT_TOKEN and TG_CHAT_ID are set: ${{ secrets.TELEGRAM_BOT_TOKEN != '' && secrets.TELEGRAM_CHAT_ID != '' }}"

      - name: Lint and auto-fix Markdown files
        run: |
          sudo npm install -g markdownlint-cli2
          npx markdownlint-cli2-fix "topics/*.md"

      - name: Validate Telegram Markdown (basic check)
        run: |
          for file in topics/*.md; do
            if grep -q '[\[\]\(\)]' "$file"; then
              echo "Checking brackets and parentheses in $file"
              # Simple check for unbalanced brackets/parentheses
              open_brackets=$(grep -o '\[' "$file" | wc -l)
              close_brackets=$(grep -o '\]' "$file" | wc -l)
              open_parens=$(grep -o '(' "$file" | wc -l)
              close_parens=$(grep -o ')' "$file" | wc -l)
              if [ "$open_brackets" -ne "$close_brackets" ] || [ "$open_parens" -ne "$close_parens" ]; then
                echo "::error file=$file::Unbalanced brackets or parentheses detected."
                exit 1
              fi
            fi
          done

      - name: Post new Markdown news to Telegram
        env:
          TG_BOT_TOKEN: ${{ secrets.TELEGRAM_BOT_TOKEN }}
          TG_CHAT_ID: ${{ secrets.TELEGRAM_CHAT_ID }}
          GITHUB_EVENT_NAME: ${{ github.event_name }}
          ENVIRONMENT: production
        run: |
          bash scripts/post_news_to_tg.sh

      - name: Upload post log as artifact
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: telegram-news-log
          path: scripts/post_news_to_tg.log
          retention-days: 7
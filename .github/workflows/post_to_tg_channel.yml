# ==================================================================================================
# File: .github/workflows/post_to_tg_channel.yml
#
# Workflow Name: Post News to Telegram
#
# Description:
#   This workflow automates the process of posting Markdown news files from the `updates/` directory
#   to a Telegram channel. It handles images, documents, and text content, ensuring compliance with
#   Telegram's message size limits. After posting, files are archived in the `posted/` directory.
#
# Features:
#   - Posts images (![](url)) and documents (PDF, DOC, etc.) before text content.
#   - Splits long messages into chunks (max 4096 characters) for Telegram compatibility.
#   - Adds inline buttons with a "Read More" link to each post.
#   - Skips empty files gracefully and logs all actions for debugging.
#   - Archives processed files to avoid reposting.
#   - Saves detailed logs to GitHub Actions artifacts for inspection.
#   - Commits and pushes archived files back to the repository.
#
# Triggers:
#   - Scheduled daily at 8 AM UTC.
#   - Manual trigger via workflow dispatch.
#
# Required Secrets:
#   - TELEGRAM_BOT_TOKEN: Telegram Bot API token.
#   - TELEGRAM_CHAT_ID: Target Telegram chat ID.
#
# Author: Dmitry Troshenkov <troshenkov.d@gmail.com>
# Last updated: 2025-04-23
# ==================================================================================================

name: Post News to Telegram

on:
  schedule:
    - cron: '0 8 * * *'  # Every day at 8 AM UTC
  workflow_dispatch:     # Allow manual triggering of the workflow

jobs:
  post_to_telegram:
    runs-on: ubuntu-latest
    environment: production

    steps:
# ----------------------------------------
# Step 1: Checkout the repository
# ----------------------------------------
    - name: Checkout code
      uses: actions/checkout@v3

# ----------------------------------------
# Step 2: Validate required secrets
# ----------------------------------------
    - name: Validate required Telegram secrets
      run: |
        chmod +x scripts/validate_secrets.sh
        scripts/validate_secrets.sh
      env:
        TELEGRAM_BOT_TOKEN: ${{ secrets.TELEGRAM_BOT_TOKEN }}
        TELEGRAM_CHAT_ID: ${{ secrets.TELEGRAM_CHAT_ID }}

# ----------------------------------------
# Step 3: Process Markdown files
# ----------------------------------------
    - name: Post news files to Telegram
      run: |
        chmod +x scripts/process_markdown_files.sh
        scripts/process_markdown_files.sh
      env:
        TELEGRAM_BOT_TOKEN: ${{ secrets.TELEGRAM_BOT_TOKEN }}
        TELEGRAM_CHAT_ID: ${{ secrets.TELEGRAM_CHAT_ID }}

# ----------------------------------------
# Step 4: Upload logs
# ----------------------------------------
    - name: Upload logs
      uses: actions/upload-artifact@v4
      with:
        name: telegram-logs
        path: logs/
        retention-days: 7

# ----------------------------------------
# Step 5: Commit and push changes
# ----------------------------------------
    - name: Commit and push archived files
      run: |
        git config user.name "GitHub Actions Bot"
        git config user.email "actions@github.com"
        git stash --include-untracked
        git pull --rebase --no-edit origin main
        git stash pop || echo "No stashed changes to apply."
        git add posted/
        git commit -m "Move processed news files to posted directory on $(date +'%Y-%m-%d')" || echo "No changes to commit."
        git push origin main

    - name: Commit and push logs
      run: |
        git config user.name "GitHub Actions Bot"
        git config user.email "actions@github.com"
        git add logs/
        git commit -m "Add Telegram logs on $(date +'%Y-%m-%d')" || echo "No log changes to commit."
        git push origin main

